"""add title and description to documents

Revision ID: ee86c40b8afb
Revises: b86d5080a50c
Create Date: 2025-08-31 12:34:39.769495

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ee86c40b8afb'
down_revision: Union[str, Sequence[str], None] = 'b86d5080a50c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('title', sa.String(), nullable=False))
    op.add_column('documents', sa.Column('description', sa.String(), nullable=True))
    op.alter_column('documents', 'uploaded_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint(op.f('documents_uploader_id_fkey'), 'documents', type_='foreignkey')
    op.drop_column('documents', 'filepath')
    op.drop_column('documents', 'uploader_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('uploader_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('filepath', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('documents_uploader_id_fkey'), 'documents', 'users', ['uploader_id'], ['id'])
    op.alter_column('documents', 'uploaded_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('documents', 'description')
    op.drop_column('documents', 'title')
    # ### end Alembic commands ###
