"""Add role column to document_access

Revision ID: 51cf2ac9e2b0
Revises: 1c87b11d2797
Create Date: 2025-09-19 19:18:39.560583

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '51cf2ac9e2b0'
down_revision: Union[str, Sequence[str], None] = '1c87b11d2797'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_document_access_id'), table_name='document_access')
    op.drop_table('document_access')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_access',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('doc_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('granted_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('access_level', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['documents.id'], name=op.f('document_access_doc_id_fkey')),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], name=op.f('document_access_granted_by_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('document_access_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('document_access_pkey'))
    )
    op.create_index(op.f('ix_document_access_id'), 'document_access', ['id'], unique=False)
    # ### end Alembic commands ###
